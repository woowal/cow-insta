name: Build and Deploy to EC2.

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build and Test
        run: ./gradlew build test

      - name: AWS S3
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        run: |
          aws --version

      - name: Sync Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 sync \
            --region ap-northeast-2 \
            build s3://cowinstagram \
            --delete

      - name: MySQL
        run: |
          echo "MYSQL_PASSWORD=MYSQL_PASSWORD" >> .env
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

      - name: Make dir
        run: mkdir cicd

      - name: Copy jar
        run: cp ./build/libs/*.jar ./cicd

      - name: Copy appspec
        run: cp ./appspec.yml ./cicd

      - name: Copy script
        run: cp ./deploy.sh ./cicd

      - name: Make zip
        run: zip -r -qq -j ./deploy.zip ./cicd
      - run: ls -al

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload S3
        run: aws s3 cp --region ap-northeast-2 ./deploy.zip s3://cowinstagram

      - name: Code Deploy
        run: aws deploy create-deployment --application-name cowinsta --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name cow --s3-location bucket=cowinsta,key=deploy.zip,bundleType=zip

